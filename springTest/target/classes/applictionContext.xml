<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 3.注解注入 实际开发过程中常用 -->
	<!-- 开启包扫描 -->
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.cn.gx.controller" />
	
	<beans>
		<!-- ******如果测试注解注入则把这部分内容删除*******删除开始****************************************** -->
		<bean id="user" class="com.cn.gx.controller.User">
		<!-- 1.构造方法注入 -->
		<!--
			<constructor-arg name="name" value="Gao"></constructor-arg>
			<constructor-arg name="college" ref="college"></constructor-arg>
		-->
		<!-- 2.set注入   pring会将name值的每个单词首字母转换成大写，然后再在前面拼接上"set"构成一个方法名,然后去对应的类中查找该方法,通过反射调用,实现注入。
			spring会通过默认的空参构造方法来实例化对象，所以如果在类中写了一个带有参数的构造方法，一定要把空参数的构造方法写上，否则spring没有办法实例化对象，导致报错
		-->
		<!--
			<property name="name" value="Gao"></property>
			<property name="college" ref="college"></property>
		-->
		</bean>
		<!-- ******如果测试注解注入则把这部分内容删除*******删除结束****************************************** -->
		<bean id="college" class="com.cn.gx.controller.College"></bean>
	</beans>
	
</beans>